---
import { Image } from "astro:assets";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import Pagination from "@/layouts/components/Pagination.astro";
import Post from "@/layouts/partials/Post.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import { markdownify, plainify } from "@/lib/utils/textConverter";
import { getEntryBySlug } from "astro:content";
import type { TIndexData } from "@/types";

const { blog_folder, summary_length } = config.settings;

const postIndex = (await getEntryBySlug<any, string>(
  blog_folder,
  "index",
)) as TIndexData;
const posts = await getSinglePage(blog_folder as any);
const sortedPosts = sortByDate(posts);
const totalPages = Math.ceil(posts.length / config.settings.pagination);
const currentPosts = sortedPosts.slice(0, config.settings.pagination);
---

<Base title={postIndex?.data.title}>
  <section class="section">
    <div class="container">
      <h1
        class="text-center font-normal lg:text-[56px]"
        set:html={markdownify(postIndex?.data.title)}
      />
      <div class="row pb-12">
        <div class="row col-12 pb-24 pt-16">
          <div class="md:col-6">
            {
              currentPosts[0].data.image && (
                <Image
                  class="rounded-lg"
                  src={currentPosts[0].data.image}
                  alt={currentPosts[0].data.title}
                  width={925}
                  height={475}
                />
              )
            }
          </div>
        </div>
        {
          currentPosts.slice(1).map((post) => (
            <div class="col-12 mb-8 sm:col-6 lg:col-4">
              <Post post={post} />
            </div>
          ))
        }
      </div>
      <Pagination
        section={blog_folder}
        currentPage={1}
        totalPages={totalPages}
      />
    </div>
  </section>
</Base>
